buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        jcenter()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        maven { url = 'https://maven.parchmentmc.org' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: "5.1.+", changing: false
        classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
        classpath "org.parchmentmc:librarian:1.+"
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version "1.4.0"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.0-1.19.2'
group = 'com.silopante.createair'
archivesBaseName = 'createair'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2022.11.27-1.19.2'

    runs {
        client {
            workingDirectory project.file('run')
			arg '-mixin.config=createair.mixins.json'
            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'createair'

            mods {
                createair {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')
			arg '-mixin.config=createair.mixins.json'
            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'createair'

            mods {
                createair {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run/gametest')
			arg '-mixin.config=createair.mixins.json'
            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'createair'

            mods {
                createair {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'createair', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                createair {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
    add sourceSets.main, 'createair.mixins.refmap.json'
    config 'createair.mixins.json'
    dumpTargetOnFailure true
}

repositories {

	maven {
        name 'tterrag maven'
        url 'https://maven.tterrag.com'
    }
	maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.14'
	
	implementation fg.deobf("curse.maven:create-328085:4550987")
	implementation fg.deobf("curse.maven:new-thin-air-878379:4602508")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Create Air",
                "Specification-Vendor"    : "silopante",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "silopante",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}